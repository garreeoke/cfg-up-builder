apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: basic-server-nodes.eks.aws.iam.builder.upbound.io
  labels:
    builder: iam
    cloud: aws
    service: eks
    config: basic-server-nodes
  annotations:
    meta.upbound.io/builder-description: "Create basic eks policy for api server and nodes to cluster name given"
    meta.upbound.io/builder-readme: "https://github.com/upbound/builder/tree/main/builders/aws#basic-server-nodes.eks.aws.iam.builder.upbound.io"
spec:
  compositeTypeRef:
    apiVersion: upbound.io/v1alpha1
    kind: XBuilder
  patchSets:
    - name: common-fields
      patches:
        - fromFieldPath: spec.builderConfig.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.builderConfig.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.tags
          toFieldPath: spec.forProvider.tags
  resources:
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "eks.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
      name: controlplaneRole
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-control-plane-role"
        - fromFieldPath: spec.name
          toFieldPath: metadata.labels[role]
          transforms:
            - type: string
              string:
                fmt: "%s-control-plane-role"
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      name: clusterRolePolicyAttachment
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-cluster-rpa"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.roleRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-control-plane-role"
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
      name: nodegroupRole
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-node-group-role"
        - fromFieldPath: spec.name
          toFieldPath: metadata.labels[role]
          transforms:
            - type: string
              string:
                fmt: "%s-node-group-role"
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
      name: workerNodeRolePolicyAttachment
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-worker-node-rpa"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.roleRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-node-group-role"
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
      name: cniRolePolicyAttachment
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-cni-rpa"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.roleRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-node-group-role"
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      name: containerRegistryRolePolicyAttachment
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-container-registry-node-rpa"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.roleRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-node-group-role"