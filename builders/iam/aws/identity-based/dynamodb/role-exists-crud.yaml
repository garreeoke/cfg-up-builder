apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: role-exists-crud.dynamodb.aws.iam.builder.upbound.io
  labels:
    builder: iam
    cloud: aws
    service: dynamodb
    config: role-exists-crud
  annotations:
    meta.upbound.io/builder-description: "Crud dynamodb policy and assigns it to an existing role ."
    meta.upbound.io/builder-readme: "https://github.com/upbound/builder/tree/main/builders/aws#role-exists-crud.dynamodb.aws.iam.builder.upbound.io"
spec:
  compositeTypeRef:
    apiVersion: upbound.io/v1alpha1
    kind: XBuilder
  patchSets:
    - name: common-fields
      patches:
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.tags
          toFieldPath: spec.forProvider.tags
  resources:
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          forProvider:
            description: "Policy for dynammodb crud"
            policy: patched
      name: dynamodbCrudPolicy
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-dynamodb-crud"
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
              - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.resourceArn
              - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.resourceArn
              - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.resourceArn
            strategy: string
            string:
              fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                           "dynamodb:BatchGetItem",
                           "dynamodb:BatchWriteItem",
                           "dynamodb:DescribeStream",
                           "dynamodb:DescribeTable",
                           "dynamodb:Query",
                           "dynamodb:Scan",
                           "dynamodb:Get*",
                           "dynamodb:DeleteItem",
                           "dynamodb:UpdateItem",
                           "dynamodb:PutItem"
                        ],
                        "Resource": [
                           "%s*",
                           "%s*/*",
                           "%s*/index/*"
                        ]
                      }
                    ]
                  }
    - base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment

      name: dynamodbPolicyAttachment
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-dynamodb-rpa"
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.policyArnRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-dynamodb-crud"
        - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.principal
          toFieldPath: spec.forProvider.role

