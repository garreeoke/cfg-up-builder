apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-only.dynamodb.aws.iam.builder.upbound.io
  labels:
    builder: iam
    cloud: aws
    service: dynamodb
    config: write-only
  annotations:
    meta.upbound.io/builder-description: "Create policy to be able to write a dynamodb table"
    meta.upbound.io/builder-readme: "https://github.com/upbound/builder/tree/main/builders/aws#write-only.dynamodb.aws.iam.builder.upbound.io"
spec:
  compositeTypeRef:
    apiVersion: upbound.io/v1alpha1
    kind: XBuilder
  patchSets:
    - name: common-fields
      patches:
        - fromFieldPath: spec.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-dynamodb-table-read-policy"
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.tags
          toFieldPath: spec.forProvider.tags
  resources:
    - name: write-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider:
            description: ""
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.description
          transforms:
            - type: string
              string:
                fmt: "%s-dynamodb-table-write-policy"
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
              - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.resourceArn
              - fromFieldPath: spec.builderConfig.cloudParameters.iam.aws.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:DeleteItem",
                        "dynamodb:BatchWriteItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": [
                        "%s",
                        "%s/index/*"
                      ]
                    }
                  ]
                }